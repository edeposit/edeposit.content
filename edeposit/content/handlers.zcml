<configure
    xmlns="http://namespaces.zope.org/zope"
    xmlns:cmf="http://namespaces.zope.org/cmf"
    xmlns:browser="http://namespaces.zope.org/browser"
    xmlns:i18n="http://namespaces.zope.org/i18n"
    xmlns:grok="http://namespaces.zope.org/grok"
    xmlns:genericsetup="http://namespaces.zope.org/genericsetup"
    i18n_domain="edeposit.content">

  <!-- Include files -->
  <include package="collective.zamqp" />

  <adapter
    for="edeposit.content.originalfile.IOriginalFile
         edeposit.content.handlers.IAMQPError
         "
    provides="edeposit.content.amqp.IAMQPHandler"
    factory=".amqp.ExceptionHandler"
    />

  <adapter
    for="edeposit.content.book.IBook
         edeposit.content.handlers.IAMQPError
         "
    provides="edeposit.content.amqp.IAMQPHandler"
    factory=".amqp.ExceptionHandler"
    />

  <adapter
    for="edeposit.content.aleph_record.IAlephRecord
         edeposit.content.handlers.IAMQPError
         "
    provides="edeposit.content.amqp.IAMQPHandler"
    factory=".amqp.AlephRecordExceptionHandler"
    />

  <adapter
    for="edeposit.content.originalfile.IOriginalFile
         edeposit.content.amqp.IScanResult
         "
    provides="edeposit.content.amqp.IAMQPHandler"
    factory=".amqp.OriginalFileAntivirusResultHandler"
    />

  <adapter
    for="edeposit.content.eperiodicalpart.IePeriodicalPart
         edeposit.content.amqp.IScanResult
         "
    provides="edeposit.content.amqp.IAMQPHandler"
    factory=".amqp.EPeriodicalPartAntivirusResultHandler"
    />

  <adapter
    for="edeposit.content.book.IBook
         edeposit.content.amqp.IScanResult
         "
    provides="edeposit.content.amqp.IAMQPHandler"
    factory=".amqp.BookAntivirusResultHandler"
    />

  <adapter
    for="edeposit.content.originalfile.IOriginalFile
         edeposit.content.amqp.IPDFBoxResponse
         "
    provides="edeposit.content.amqp.IAMQPHandler"
    factory=".amqp.PDFBoxValidationResultHandler"
    />

  <adapter
    for="edeposit.content.eperiodicalpart.IePeriodicalPart
         edeposit.content.amqp.IPDFBoxResponse
         "
    provides="edeposit.content.amqp.IAMQPHandler"
    factory=".amqp.PDFBoxValidationResultHandler"
    />

  <adapter
    for="edeposit.content.originalfile.IOriginalFile
         edeposit.content.amqp.IEPubCheckResponse
         "
    provides="edeposit.content.amqp.IAMQPHandler"
    factory=".amqp.EPubCheckValidationResultHandler"
    />

  <adapter
    for="edeposit.content.eperiodicalpart.IePeriodicalPart
         edeposit.content.amqp.IEPubCheckResponse
         "
    provides="edeposit.content.amqp.IAMQPHandler"
    factory=".amqp.EPubCheckValidationResultHandler"
    />

  <adapter
    for="edeposit.content.originalfile.IOriginalFile
         edeposit.content.amqp.IISBNValidationResult
         "
    provides="edeposit.content.amqp.IAMQPHandler"
    factory=".amqp.ISBNValidateResultHandler"
    />

  <adapter
    for="edeposit.content.book.IBook
         edeposit.content.amqp.IISBNValidationResult
         "
    provides="edeposit.content.amqp.IAMQPHandler"
    factory=".amqp.ISBNValidateResultHandler"
    />

  <adapter
    for="edeposit.content.originalfile.IOriginalFile
         edeposit.content.amqp.ICountResult
         "
    provides="edeposit.content.amqp.IAMQPHandler"
    factory=".amqp.CountResultHandler"
    />

  <adapter
    for="edeposit.content.book.IBook
         edeposit.content.amqp.ICountResult
         "
    provides="edeposit.content.amqp.IAMQPHandler"
    factory=".amqp.CountResultHandler"
    />

  <adapter
    for="edeposit.content.originalfile.IOriginalFile
         edeposit.content.amqp.IAlephExportResult
         "
    provides="edeposit.content.amqp.IAMQPHandler"
    factory=".amqp.AlephExportResultHandler"
    />

  <adapter
    for="edeposit.content.book.IBook
         edeposit.content.amqp.IAlephExportResult
         "
    provides="edeposit.content.amqp.IAMQPHandler"
    factory=".amqp.AlephExportResultHandler"
    />

  <adapter
      for="edeposit.content.originalfile.IOriginalFile
           edeposit.content.amqp.IAlephSearchResult
           "
      provides="edeposit.content.amqp.IAMQPHandler"
      factory=".amqp.AlephSearchResultHandler"
      />

  <adapter
      for="edeposit.content.book.IBook
           edeposit.content.amqp.IAlephSearchResult
           "
      provides="edeposit.content.amqp.IAMQPHandler"
      factory=".amqp.AlephSearchResultHandler"
      />

  <adapter
      for="edeposit.content.aleph_record.IAlephRecord
           edeposit.content.amqp.IAlephSearchResult
           "
      provides="edeposit.content.amqp.IAMQPHandler"
      factory=".amqp.AlephRecordAlephSearchResultHandler"
      />

  <!-- <adapter -->
  <!--     for="edeposit.content.originalfile.IOriginalFile -->
  <!--          edeposit.content.amqp.IAlephSearchDocumentResult -->
  <!--          " -->
  <!--     provides="edeposit.content.amqp.IAMQPHandler" -->
  <!--     factory=".amqp.OriginalFileAlephSearchDocumentResultHandler" -->
  <!--     /> -->

  <!-- <adapter -->
  <!--     for="edeposit.content.originalfile.IOriginalFile -->
  <!--          edeposit.content.amqp.IAlephSearchSummaryRecordResult -->
  <!--          " -->
  <!--     provides="edeposit.content.amqp.IAMQPHandler" -->
  <!--     factory=".amqp.OriginalFileAlephSearchSummaryRecordResultHandler" -->
  <!--     /> -->
  <adapter
      for="edeposit.content.originalfile.IOriginalFile
           edeposit.content.handlers.IEmptyMessage
           "
      provides="edeposit.content.amqp.IAMQPHandler"
      factory=".amqp.EmptyResultHandler"
      />

  <adapter
      for="edeposit.content.originalfile.IOriginalFile
           edeposit.content.amqp.ICalibreConversionResult
           "
      provides="edeposit.content.amqp.IAMQPHandler"
      factory=".amqp.OriginalFileThumbnailGeneratingResultHandler"
      />

  <adapter
      for="edeposit.content.eperiodicalpart.IePeriodicalPart
           edeposit.content.amqp.ICalibreConversionResult
           "
      provides="edeposit.content.amqp.IAMQPHandler"
      factory=".amqp.ThumbnailGeneratingResultHandler"
      />

  <adapter
    for="edeposit.content.originalfile.IOriginalFile"
    provides="edeposit.content.next_step.INextStep"
    factory=".next_step.OriginalFileNextStep"
    />

  <adapter
    for="edeposit.content.book.IBook"
    provides="edeposit.content.next_step.INextStep"
    factory=".next_step.BookNextStep"
    />

  <adapter
    for="edeposit.user.producent.IProducent
         edeposit.content.handlers.IAMQPError
         "
    provides="edeposit.content.amqp.IAMQPHandler"
    factory=".amqp.AgreementGenerationExceptionHandler"
    />

  <adapter
      for="edeposit.user.producent.IProducent
           edeposit.content.amqp.IPDFGenerationResult
           "
      provides="edeposit.content.amqp.IAMQPHandler"
      factory=".amqp.AgreementGenerationResultHandler"
      />

  <adapter
      for="edeposit.content.originalfile.IOriginalFile
           edeposit.content.amqp.IPDFGenerationResult"
      provides="edeposit.content.amqp.IAMQPHandler"
      factory=".amqp.VoucherGenerationResultHandler"
      />

  <adapter
      for="edeposit.content.originalfile.IOriginalFile
           edeposit.content.amqp.IStoragePublication"
      provides="edeposit.content.amqp.IAMQPHandler"
      factory=".amqp.PublicationExportToStorageResultHandler"
      />

  <adapter
      for="edeposit.content.amqp_folder.IAMQPFolder
           edeposit.content.tasks.ISendEmailWithWorklistToGroup
           "
      provides="edeposit.content.amqp.IAMQPHandler"
      factory=".amqp.SendEmailWithWorklistToGroupTaskHandler"
      />

  <adapter
      for="edeposit.content.amqp_folder.IAMQPFolder
           edeposit.content.handlers.IEmptyMessage
           "
      provides="edeposit.content.amqp.IAMQPHandler"
      factory=".amqp.EmptyResultHandler"
      />

  <adapter
      for="edeposit.content.amqp_folder.IAMQPFolder
           edeposit.content.tasks.ISendEmailWithCollectionToGroup
           "
      provides="edeposit.content.amqp.IAMQPHandler"
      factory=".amqp.SendEmailWithCollectionToGroupTaskHandler"
      />

  <adapter
      for="edeposit.content.amqp_folder.IAMQPFolder
           edeposit.content.tasks.ISendEmailWithUserWorklist
           "
      provides="edeposit.content.amqp.IAMQPHandler"
      factory=".amqp.SendEmailWithUserWorklistTaskHandler"
      />

  <adapter
      for="edeposit.content.amqp_folder.IAMQPFolder
           edeposit.content.tasks.ILoadSysNumbersFromAleph
           "
      provides="edeposit.content.amqp.IAMQPHandler"
      factory=".amqp.LoadSysNumbersFromAlephTaskHandler"
      />

  <adapter
      for="edeposit.content.amqp_folder.IAMQPFolder
           edeposit.content.tasks.IRenewAlephRecords
           "
      provides="edeposit.content.amqp.IAMQPHandler"
      factory=".amqp.RenewAlephRecordsTaskHandler"
      />

  <adapter
      for="edeposit.content.amqp_folder.IAMQPFolder
           edeposit.content.tasks.IDoActionFor
           "
      provides="edeposit.content.amqp.IAMQPHandler"
      factory=".amqp.DoActionForTaskHandler"
      />

  <adapter
      for="edeposit.content.amqp_folder.IAMQPFolder
           edeposit.content.tasks.ICheckUpdates
           "
      provides="edeposit.content.amqp.IAMQPHandler"
      factory=".amqp.CheckUpdatesTaskHandler"
      />

  <adapter
      for="edeposit.content.amqp_folder.IAMQPFolder
           edeposit.content.tasks.IEnsureProducentsRolesConsistency
           "
      provides="edeposit.content.amqp.IAMQPHandler"
      factory=".amqp.EnsureProducentsRolesConsistencyTaskHandler"
      />

  <adapter
      for="edeposit.content.amqp_folder.IAMQPFolder
           edeposit.content.amqp.IAlephLinkStatusResponse
           "
      provides="edeposit.content.amqp.IAMQPHandler"
      factory=".amqp.AlephLinkUpdateResponseHandler"
      />

  <adapter
      for="edeposit.content.amqp_folder.IAMQPFolder
           edeposit.content.tasks.IEPublicationsWithErrorEmailNotify
           "
      provides="edeposit.content.amqp.IAMQPHandler"
      factory=".amqp.EPublicationsWithErrorEmailNotifyTaskHandler"
      />

  <adapter
      for="edeposit.content.amqp_folder.IAMQPFolder
           edeposit.content.tasks.IEPublicationsWithErrorEmailNotifyForAllProducents
           "
      provides="edeposit.content.amqp.IAMQPHandler"
      factory=".amqp.EPublicationsWithErrorEmailNotifyForAllProducentsHandler"
      />

  <adapter
      for="edeposit.content.amqp_folder.IAMQPFolder
           edeposit.content.tasks.ISendEmailsWithCollectionToAllProducents
           "
      provides="edeposit.content.amqp.IAMQPHandler"
      factory=".amqp.SendEmailsWithCollectionToAllProducentsHandler"
      />

  <adapter
      for="edeposit.content.amqp_folder.IAMQPFolder
           edeposit.content.tasks.ISendEmailWithCollectionToProperProducentMembers
           "
      provides="edeposit.content.amqp.IAMQPHandler"
      factory=".amqp.SendEmailWithCollectionToProperProducentMembersHandler"
      />

</configure>
